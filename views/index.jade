doctype html
head
    meta(charset='UTF-8')

    link(rel='icon', type='image/jpg', href='/images/favicon.jpg')

    link(rel='stylesheet', href='/stylesheets/estilo.css', type='text/css')

    title Analizador

    script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js')
    script(type='text/x-mathjax-config').
      MathJax.Hub.Config({
        extensions: ["tex2jax.js"],
        jax: ["input/TeX", "output/HTML-CSS"],
        tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"] ],
          displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
          processEscapes: true
        },
        "HTML-CSS": { availableFonts: ["TeX"] }
      });
    script(type='text/javascript', src='http://cdn.mathjax.org/mathjax/latest/MathJax.js')

    script(src='https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.2/underscore-min.js')

    script(src='/javascripts/main.js', type='text/javascript')
    script(src='/javascripts/NFA.js', type='text/javascript')

    style(type='text/css').
      a{text-decoration:none;}
      a:link{color:white;}
      a:visited{color:white;}
      a:hover{font-size:16; color:#0B0B61;}
  body
    .contenido_total
      .titulo_practica
        h1(align='center')
          font(color='white') Analizador de Automatas Finitos No Deterministas (NFA)

        hr

      .menu
        dl#primero
          dt
            b
              a.myButton(href='https://kevinrm.github.io/') P&aacute;gina Kevin

          dt
            b
              a.myButton(href='http://alu0100764666.github.io/') P&aacute;gina Sabato

          dt
            b
              a.myButton(href="tests/index.html") Tests

          dt
            b
              a.Button(href='https://github.com/alu0100764666/ProyectoPL')
                | Ver en
                strong Github

          dt
            b
              a.Button(href='')
                strong Travis

          dt
            b
              a.Button(href='https://www.mathjax.org/') MathJax

          dt
            b
              a.Button(href='http://es.wikipedia.org/wiki/Aut%C3%B3mata_finito_no_determinista') Wikipedia

      .descripcion
        p
          i
            b
              u Esta web contiene un ejemplo de Analizador de Automatas Finitos No Deterministas (NFA), recibe la definición de un NFA y una cadena y nos dice si es aceptada o no.

      |Un autómata finito no determinista se define como:

      ol
      li
        |  $Q$ es un conjunto de estados
      li
        |  $\Sigma$ es un alfabeto
      li
        |  $q_0 \in Q$ es el estado inicial
      li
        |  $\delta \colon Q \times \Sigma \to P(Q)$ es una función de transición
      li
        |  Para el caso de los $NFA- \epsilon$, se suele expresar la función de transición de la forma: $\delta \colon Q \times \{ \Sigma \cup \epsilon \} \to P(Q)$
      br

      .contenido
        p Cargue un ejemplo para analizar o seleccione un archivo para subirlo

        div
          textarea#original(autofocus='', cols='72', rows='5')
        br

        .loadfile
          .btn_1
            button#example1(type='button', onclick="dump('/examples/example1.txt');") Example 1

          .btn_2
            button#example2(type='button', onclick="dump('/examples/example2.txt');") Example 2

          .btn_3
            button#example3(type='button', onclick="dump('/examples/example3.txt');") Example 3

          .btn_4
            button#exampleerr(type='button', onclick="dump('/examples/example_err.txt');") Example_error

          .btn_5
            input#files(type='file')

          .btn_parse
            input#PARSE.mylink(value='Parse', type='button')

        script(type='text/javascript').
          function dump(fileName) {
          $.get(fileName, function (data) {
          $("#original").val(data);
          });
          };
          document.getElementById('files').addEventListener('change', CopyMe, false);
          function CopyMe(evt) {
          var file = evt.target.files[0];
          if (file) {
          var reader = new FileReader();
          reader.onload = function(e) {
          original.innerHTML = e.target.result;
          }
          var c = reader.readAsText(file);
          }
          else { alert("Failed to load file"); }
          }

    hr

    pre#OUTPUT.
